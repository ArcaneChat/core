# Manually triggered action to build deltachat-rpc-server binaries.

name: Build deltachat-rpc-server binaries

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:

jobs:
  # Build a version statically linked against musl libc
  # to avoid problems with glibc version incompatibility.
  build_static_linux:
    name: Build deltachat-rpc-server for Linux
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Setup rust target
        run: rustup target add x86_64-unknown-linux-musl

      - name: Install musl-gcc
        run: sudo apt install musl-tools

      - name: Build
        env:
          RUSTFLAGS: "-C link-arg=-s"
        run: cargo build --release --target x86_64-unknown-linux-musl -p deltachat-rpc-server --features vendored
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: deltachat-rpc-server-x86_64
          path: target/x86_64-unknown-linux-musl/release/deltachat-rpc-server
          if-no-files-found: error

  build_aarch64_linux:
    name: Cross-compile deltachat-rpc-server for aarch64 Linux
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: sh scripts/aarch64-unknown-linux-musl.sh

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: deltachat-rpc-server-aarch64
          path: target/aarch64-unknown-linux-musl/release/deltachat-rpc-server
          if-no-files-found: error

  build_windows:
    name: Build deltachat-rpc-server for Windows
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            artifact: win32.exe
            path: deltachat-rpc-server.exe
            target: i686-pc-windows-msvc

          - os: windows-latest
            artifact: win64.exe
            path: deltachat-rpc-server.exe
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --release --package deltachat-rpc-server --target ${{ matrix.target }} --features vendored

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: deltachat-rpc-server-${{ matrix.artifact }}
          path: target/${{ matrix.target}}/release/${{ matrix.path }}
          if-no-files-found: error
